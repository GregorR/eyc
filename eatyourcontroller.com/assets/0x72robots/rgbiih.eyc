Not copyright;
license CC0 (
Written by 0x72.

Source: https://0x72.itch.io/16x16-robot-tileset

CC0 dedication: https://creativecommons.org/publicdomain/zero/1.0/

To the extent possible under law, 0x72 has waived all copyright and related or
neighboring rights to 16x16-robot-tileset.

This version was modified by Gregor Richards to use the RGBIIH palette. These
modifications are not creative and therefore do not fall under copyright.
Regardless, to the extent possible under law, Gregor Richards has waived all
copyright and related or neighboring rights to the modifications.

This file was written by Gregor Richards. It is simply an index, is not
creative, and thus does not fall under copyright. Regardless, to the extent
possible under law, Gregor Richards has waived all copyright and related or
neighboring rights to the modifications.
);

import /eatyourcontroller.com/basics;

alias core.*;
alias basics.*;

export sprites Robots "rgbiih.png" {
    default (scale=16);

    wall {
        nsew (0, 0);
        nw (0, 1);
        n; ne;
        w (0, 2);
        c; e;
        sw (0, 3);
        s; se;
    }

    robots {
        default (h=2, frames=4);
        orange (13, 1);
        cyan (13, 3);
        red (13, 5);
        black (13, 7);
        magenta (13, 9);
        teal (13, 11);
        purple (13, 13);
        green (13, 15);
        yellow (13, 17);
        default (frames=8);
        orangew (18, 1);
        cyanw (18, 3);
        redw (18, 5);
        blackw (18, 7);
        magentaw (18, 9);
        tealw (18, 11);
        purplew (18, 13);
        greenw (18, 15);
        yelloww (18, 17);
    }
}

export class RobotsWall : MultiWall {
    override tuple(string, string) getSprite(string blocking) {
        if (blocking == "")
            return Robots.wall.c;

        string nm = "wall.";
        for (string el in "nsew") {
            if (this.blocking[el])
                nm += el;
        }
        return tuple(Robots : string, nm);
    }
}

export class RobotsWallFactory : ObjectContextFactory {
    override mutating this Object get(
        string label, array(string) layer, num x, num y
    ) {
        string blocking = "";
        if (layer[y-1][x] != label)
            blocking += "n";
        if (layer[y+1][x] != label)
            blocking += "s";
        string row = layer[y];
        if (row[x+1] != label)
            blocking += "e";
        if (row[x-1] != label)
            blocking += "w";
        if (blocking == "ns" || blocking == "ew")
            blocking = "nsew";
        return new RobotsWall {
            this.initMultiWall(blocking);
        };
    }
}

export class RobotsStage : GarmentStage {
    override mutating once void initMapping() {
        super();
        this.mapping["."] = new RobotsWallFactory;
    }
}
